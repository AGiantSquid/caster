#
# This is a heavily modified version of Dragonfly's _multiedit.py command-module

from dragonfly import *
from lib import ccr, navigation

release = Key("shift:up, ctrl:up")
noSpaceNoCaps = Mimic("\\no-caps-on") + Mimic("\\no-space-on") #this gets added on the right side
noCaps = Mimic("\\no-caps-on")

cmd.map = {
       # Spoken-form    ->    ->    ->     Action object
		"score <text>":				Function(ccr.score, extra="text"),		
        "ja <text>":					Function(ccr.camel_case, extra="text"),	
		
		# CCR PROGRAMMING STANDARD
		"if":						Text("if()")+Key("left"),
		"else":						Text("else {}")+Key("left, enter:2, up"),
		#
		"switch":					Text("switch(){}")+Key("left, enter:2, up"),
		"case":						Text("case :")+Key("left"),
		"break":					Text("break;"),
		"default":					Text("default: "),
		#
		"do loop":					Text("do {}")+Key("left, enter:2"),
        "while":					Text("while ()")+Key("left"),
        "for loop":					Text("for (int i=0; i<VALUE; i++)"),
		"for each":					Text("for each (VARIABLE in OBJECT)"),
        #
        "convert to string":		Key("dquote, dquote, plus"),
		"convert to integer":		Text("parseInt()")+Key("left"),
		"convert to floating point":Text("parseFloat()")+Key("left"),
		#
		"and":                      Text(" && "),
        "or":                       Text(" || "),
        "not":                      Text("!"),
        #
		"print":					Text("console.log()")+Key("left"),
		#
		# (no imports in javascript)
		# 
		"function":					Text("function PARAMETER(){}")+Key("left, enter:2, up"),
		# (no classes in javascript)
		#
		"add comment":				Text("//"),
		"long comment":				Text("/**/")+Key("left,left"),
		#
		"null":						Text("null"),
		#
		"return":					Text("return "),
		#
		"true":						Text("true"),
		"false":					Text("false"),
		
		
		# JavaScript specific
		
		"timer":					Text("setInterval()")+Key("left"),
		"timeout":					Text("setTimeout()")+Key("left"),
		"long form if":				Text("if (){}")+Key("left, enter:2, up"),
		"document":					Text("document"),
		"index of":					Text("indexOf()")+Key("left"),
		"has own property":			Text("hasOwnProperty()")+Key("left"),
		"length":					Text("length"),
		"self":						Text("self"),
		"push":						Text("push"),
		"inner HTML":				Text("innerHTML"),
		
        "continue":					Text("continue"),

        "this":						Text("this"),
        "try":						Text("try {}")+Key("left, enter:2, up"),
        
        "catch":					Text("catch(e) {}")+Key("left, enter:2, up"),
		
		"throw":					Text("throw "),
		"instance of":				Text("instanceof "), 
        "throws":					Text("throws "),
        "(far | variable)":			Text("var "),
        
        "integer":					Text("int "),
        "new":						Text("new "),
        
        "float":					Text("float "),
	   
          }

cmd.extras   = [
            Dictation("text"),
            
           ]
cmd.defaults = {
           }
