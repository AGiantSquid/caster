#
# This is a heavily modified version of Dragonfly's _multiedit.py command-module
#  meant to enable python  syntax with CCR

from dragonfly import *

release = Key("shift:up, ctrl:up")
noSpaceNoCaps = Mimic("\\no-caps-on") + Mimic("\\no-space-on") #this gets added on the right side

cmd.map = {
           # Spoken-form    ->    ->    ->     Action object
			
           

		   #Pascal specific macros           
     	   "[is] not equal to":				   Key("langle,rangle"),
     	   "import":						Text( "import " ),
     	   "add comment":					Text( "//" ),
			"new class":				Key( "as-n, down, down, down, down, enter"),
        # logic shortcuts
        "and":                          Text(" and "),
        "or":                           Text(" or "),
#        "equals":                       Text(":="),
        "if then":                      Text("if  then"),
        "if then begin":                Text("if  then")+ Key("enter")+ Text("begin\n\nend;")+ Key("up, up,up,left"),
        "function":						Text("function FNAME():RETURNTYPE;\nvar\nNAME:TYPE;\nbegin\n\nend;"),
        "procedure":						Text("procedure PNAME();\nvar\nNAME:TYPE;\nbegin\n\nend;"),
        
        "for each":					Text("for  in :")+ Key("left:5"),
        "for I":					Text("for i in range(0, ):")+ Key("left:2"),
			
			
            "<n> bark":                           Text("%(n)d"),
            "<n> <n2> bark":                           Text("%(n)d%(n2)d"),
            "<n> <n2> <n3> bark":                           Text("%(n)d%(n2)d%(n3)d"),
            "string <text> string":                           Text("%(text)s"), 
	   
       
     	   
          }
cmd.extras   = [
            IntegerRef("n", 0, 100),
            IntegerRef("n2", 0, 100),
            IntegerRef("n3", 0, 100),
            Dictation("text"),
           ]
cmd.defaults = {
            "n": 1,
           }
