from dragonfly import *
from lib import navigation, paths, context

navigation.initialize_clipboard()

cmd.map = {
    'kick':                         Function(navigation.kick),
	'kick mid': 				    Function(navigation.kick_middle),
	'psychic':	 	                Function(navigation.kick_right),
    '(kick double|double kick)':    Playback([(["mouse", "double", "click"], 0.0)]),
    "shift right click":            Key("shift:down")+ Mouse("right")+ Key("shift:up"),
    "scroll [<direction>] <nnv>":   Function(navigation.scroll, extra={'direction', "nnv"}),
    'be grid position mode':        BringApp("pythonw", paths.get_grid(), r"--positionMode"),
    'be grid wrap':                 Function(navigation.grid_to_window),
    'be grid':                      Function(navigation.grid_full),
    "curse <direction> [<direction2>] [<n5nv>]":Function(navigation.pixel_jump, extra={"direction","direction2","n5nv"}),
    "left point":                   Playback([(["MouseGrid"], 0.1),(["four", "four"], 0.1),(["click"], 0.0)]),
    "right point":                  Playback([(["MouseGrid"], 0.1),(["six", "six"], 0.1),(["click"], 0.0)]),
    "center point":                 Playback([(["MouseGrid"], 0.1),(["click"], 0.0)]),
    
    "gopher <direction3> <target>": Function(context.navigate_to_character, extras={"direction3","target"}),    
    "jump in":						Playback([(["gopher", "next", "openers", "right"], 0.0)]),
    "jump out":						Playback([(["gopher", "next", "closers", "right"], 0.0)]),
    "jump back":					Playback([(["gopher", "previous", "openers", "left"], 0.0)]),
    "fill that":					Playback([(["gopher", "previous", "parameter", "left", "color"], 0.0)]),
    
    #keyboard shortcuts
	'save':                         Key("c-s"),
    'scratch':                      Playback([(["scratch", "that"], 0.0)]),
    'enter [<nnv>]':                Key("enter")* Repeat(extra="nnv"),
    "down [<nnv>]":                 Key("down") * Repeat(extra="nnv"),
    "up [<nnv>]":                   Key("up") * Repeat(extra="nnv"),
    "left [<nnv>]":                 Key("left") * Repeat(extra="nnv"),
    "right [<nnv>]":                Key("right") * Repeat(extra="nnv"),
    "fly [<fly_mode>] [<nnv>]":     Function(navigation.fly, extra={"fly_mode", "nnv"}),
    "color [<color_mode>] [<nnv>]": Function(navigation.color, extra={"color_mode", "nnv"}),
    "shin [<color_mode>] [<nnv>]":  Function(navigation.shin, extra={"color_mode", "nnv"}),
    "find":                         Key("c-f"),
    "replace":                      Key("c-h"),
    "copy [<nnv>]":                 Key("c-c")+Function(navigation.clipboard_to_file, extra="nnv"),
    "cut [<nnv>]":                  Key("c-x")+Function(navigation.clipboard_to_file, extra="nnv"),
    "select all":                   Key("c-a"),
    "drop [<nnv>] [times <n2nv>]":  Function(navigation.drop, extra={"nnv","n2nv"}),
    "delete [<nnv>]":               Key("del/5") * Repeat(extra="nnv"),
    "clear [<nnv>]":                Key("backspace") * Repeat(extra="nnv"),
    "(cancel | escape)":            Key("escape"),
     
    # miscellaneous
    'auto <mode> <textnv> [go]':    Function(navigation.auto_spell, extra={"mode","textnv"}),
    "wait":							Pause("100"),

          }

cmd.extras = [
          IntegerRef("nnv", 1, 500),
          IntegerRef("n2nv", 1, 1000),
          IntegerRef("n5nv", 1, 1000),
          Dictation("textnv"),
          Choice("direction",
                {"up": "up", "down": "down", "left": "left", "right": "right",
                }),
          Choice("direction2",
                {"right": "right", "up": "up", "down": "down", "left": "left", 
                }),
          Choice("direction3",
                {"out": "right", "back out": "left", "next": "right", "previous": "left"
                }),
          Choice("target",
                {"comma": ",", "(period | dot)": ".", "(pair | parentheses)": "(~)",
                "[square] (bracket | brackets)": "[~]", "curly [brace]": "{~}",
                "loop": "for~while", "L paren": "(", "are paren": ")", "openers": "(~[~{",
                "closers": "}~]~)", "parameter": "PARAMETER",
                }),
          Choice("mode",
                {"spell": "spell", "sent": "sent", "crunch": "crunch", "caps": "caps",
                }),
          Choice("color_mode",
                {"left": "left", "back": "back", "up": "up", "down": "down", 
                 "right": "right", "home": "home", "end": "end",
                }),

          Choice("fly_mode",
                {"left": "left", "back": "back", "top": "top", "bottom": "bottom", 
                 "right": "right", "home": "home", "end": "end", "away": "end",
                }),
         ]
cmd.defaults ={
			"nnv": 1,"n2nv": 1,"textnv": "", "n5nv":5, "color_mode":"right", "fly_mode":"right",
           	"direction2":"", 
           }