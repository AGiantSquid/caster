from dragonfly import *
from lib import navigation, context

navigation.initialize_clipboard()

cmd.map = {
	# mouse
	'kick':                         Function(navigation.kick),
	'kick mid': 				    Function(navigation.kick_middle),
	'psychic':	 	                Function(navigation.kick_right),
    '(kick double|double kick)':    Playback([(["mouse", "double", "click"], 0.0)]),
    "shift right click":            Key("shift:down")+ Mouse("right")+ Key("shift:up"),
	"curse <direction> [<direction2>] [<nnavi500>]":Function(navigation.curse, extra={"direction","direction2","nnavi500"}),
    "left point":                   Playback([(["MouseGrid"], 0.1),(["four", "four"], 0.1),(["click"], 0.0)]),
    "right point":                  Playback([(["MouseGrid"], 0.1),(["six", "six"], 0.1),(["click"], 0.0)]),
    "center point":                 Playback([(["MouseGrid"], 0.1),(["click"], 0.0)]),
    
    #Voicecode-inspired
    "jump in":						Playback([(["gopher", "next", "openers"], 0.0)])+Key("right"),
    "jump out":						Playback([(["gopher", "next", "closers"], 0.0)])+Key("right"),
    "jump back":					Playback([(["gopher", "previous", "openers"], 0.0)])+Key("left"),
    "fill <target>":				Function(context.fill_blanks, extra="target"),
    "(pita | Peter | PETA) <textnv>":Function(navigation.pita, extra="textnv"), 
    
    
    #keyboard shortcuts
	'save':                         Key("c-s"),
    'scratch':                      Playback([(["scratch", "that"], 0.0)]),
    'shock [<nnavi500>]':          	Key("enter")* Repeat(extra="nnavi500"),
    
    "(<mtn_dir> | <mtn_mode> [<mtn_dir>]) [(<nnavi500> | <extreme>)]": Function(navigation.master_text_nav, extra={"mtn_mode", "mtn_dir", "nnavi500", "extreme"}),
    
    
    "copy [<nnavi500>]":                 Key("c-c")+Function(navigation.clipboard_to_file, extra="nnavi500"),
    "cut [<nnavi500>]":                  Key("c-x")+Function(navigation.clipboard_to_file, extra="nnavi500"),
    "drop [<nnavi500>]":  Function(navigation.drop, extra={"nnavi500"}),
    "delete [<nnavi500>]":               Key("del/5") * Repeat(extra="nnavi500"),
    "clear [<nnavi500>]":                Key("backspace") * Repeat(extra="nnavi500"),
    "(cancel | escape)":            	Key("escape"),
    
    "(tell | tau) (dock | doc)":		Key("escape, end, enter"),
	"dupe [<nnavi500>]":				Key("escape, home, s-end, c-c, end, enter, c-v") * Repeat(extra="nnavi500"),
	     
    # text formatting
    "(<capitalization> <spacing> | <capitalization> | <spacing>) (bow|bowel) <textnv>":  Function(navigation.master_format_text, extra={"capitalization", "spacing", "textnv"}), 
	
	}

cmd.extras = [
          IntegerRef("nnavi500", 1, 500),
          Dictation("textnv"),
          
          Choice("capitalization",
                    {"yell": 1, "tie": 2,"camel": 3,"sing":4, "laws":5
                    }),
          Choice("spacing",
                    {"gum": 1, "gun": 1, "spine": 2, "snake":3
                    }),
          
          Choice("direction",
                {"up": "up", "down": "down", "left": "left", "right": "right",
                }),
          Choice("direction2",
                {"right": "right", "up": "up", "down": "down", "left": "left", 
                }),
          
          navigation.TARGET_CHOICE,

          Choice("mtn_dir",
                {"up": "up", "down": "down", "left": "left", "right": "right", "back": "left"
                }),
          Choice("mtn_mode",
                {"shin": "s", "queue": "cs", "fly": "c",
                }),
          Choice("extreme",
                {"way": "way",
                }),
          

         ]
cmd.defaults ={
			"nnavi500": 1, "textnv": "", "capitalization": 0, "spacing":0, "direction2":"",
			"mtn_mode": None, "mtn_dir": "right", "extreme": None 
           }