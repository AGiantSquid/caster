#
# This is a heavily modified version of Dragonfly's _multiedit.py command-module
#  meant to enable python  syntax with CCR

from dragonfly import *
from lib import ccr

release = Key("shift:up, ctrl:up")
noSpaceNoCaps = Mimic("\\no-caps-on") + Mimic("\\no-space-on") #this gets added on the right side

cmd.map = {
       # Spoken-form    ->    ->    ->     Action object
		"score <text>":				Function(ccr.score, extra="text"),		
       

	   #Python specific macros           
 	   "import":					Text( "import " ),
 	   "from":						Text( "from " ),
 	   "self":						Text("self"),
 	   "self dot":					Text("self")+ Key("dot"),
		"none":						Text("None"),
		"print":					Text("print "),
 	   "add comment":				Text( "#" ),
		"new class":				Key( "as-n, down, down, down, down, enter"),
		
        # logic shortcuts
        "and":                      Text(" and "),
        "or":                       Text(" or "),
        "not":                      Text(" not "),
        "in":                       Text(" in "),
        "with":						Text("with "),
        "open file":				Text("open('filename','r') as f:"),
        "read lines":				Text("content = f.readlines()"),
        
        "if":                       Key("i,f,space,colon,left"),
        "else if":                  Key("e,l,i,f,space,colon,left"),
        "else block":               Text("else:")+Key("enter"),
        
        "convert to string":		Text("str()")+ Key("left"),
        "convert to integer":		Text("int()")+ Key("left"),
        "convert to float":			Text("float()")+ Key("left"),
        "length":					Text("len()")+ Key("left"),
        
        
        "for each":					Text("for  in :")+ Key("left:5"),
        "for I":					Text("for i in range(0, ):")+ Key("left:2"),
		"while":					Text("while :")+ Key("left"),
		"break":					Text("break"),

		"true":						Text("True"),
		"false":					Text("False"),

		"return":					Text("return "),
		"global":					Text("global "),
							
		
        "<n10a> [<n10b>] [<n10c>] bark":Function(navigation.numbers, extra={"n10a", "n10b", "n10c"}),
	   
       	"[dot] (pie | pi)":			Text(".py"),
		"jason":					Text("json"),
		"pie to ex":				Text("py2exe"),
          }

cmd.extras   = [
            IntegerRef("n10a", 0, 10),
            IntegerRef("n10b", 0, 10),
            IntegerRef("n10c", 0, 10),
            Dictation("text"),
           ]
cmd.defaults = {
            "n10a": 1, "n10b": -1, "n10c": -1,
           }
