from dragonfly import *
from lib import ccr

release = Key("shift:up, ctrl:up")
noSpaceNoCaps = Mimic("\\no-caps-on") + Mimic("\\no-space-on")


cmd.map = {
           # Spoken-form    ->    ->    ->     Action object
		"ja <text>":					Function(ccr.camel_case, extra="text"),			
		
		"public":						Text("public "),
		"private":						Text("private "),
		"static":						Text("static "),
		"final":						Text("final "),
		
				
		"new":							Text("new "),
		"integer":						Text("int "),
		"big integer":					Text("Integer"),
		"convert to integer":			Text("int()")+ Key("left"),
		"string":						Text("String "),
		
		"semi":							Key("semicolon"),		
        "quotes":						Key("dquote,dquote,left"),
        "thin quotes":					Key("apostrophe,apostrophe,left"),	           
     	"[is] greater than":			Key("rangle"),
     	"[is] less than":				Key("langle"),
     	"[is] greater [than] [or] equal [to]":				   Key("rangle, equals"),
     	"[is] less [than] [or] equal [to]":				   Key("langle, equals"),
     	"[is] equal to":		    	Key("equals,equals"),
     	"switch":						Text("switch(){\ncase : break;\ndefault: break;")+Key("up,up,left,left"),
     	"import":						Text( "import " ),
     	"add comment":					Text( "//" ),
		"new class":    				Key( "as-n, down, down, down, down, enter"),
        
		"and":                          Text("&&"),
        "or":                           Text("||"),
        "equals":                       Key("equals"),
        "if":                           Text("if() {")+Key("enter,up,left"),
        "else block":                   Text("else {")+Key("enter"),
        "ternary":                      Text("()?;") + (Key("left") * 3),
        "pair":                     	Text("()")+ Key("left"),
        "[square] (bracket | brackets)":Text("[]")+ Key("left"),
        "curly":                    	Text("{}")+ Key("left"),
        "plus":							Text("+"),
        "minus":						Text("-"),
			
		"pipe symbol": 		            Text("|"),
        "<njv> bark":                   Text("%(njv)d"),
        "<njv> <n2jv> bark":            Text("%(njv)d%(n2jv)d"),
        "<njv> <n2jv> <n3jv> bark":     Text("%(njv)d%(n2jv)d%(n3jv)d"),
        "<text> spell":			    Text("%(text)s"), 
	   
     	   
          }

cmd.extras   = [
            IntegerRef("njv", 0, 100),
            IntegerRef("n2jv", 0, 100),
            IntegerRef("n3jv", 0, 100),
            Dictation("text"),
           ]
cmd.defaults = {
            "njv": 1,
           }
    
