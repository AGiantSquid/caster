#
# This is a heavily modified version of Dragonfly's _multiedit.py command-module
#  meant to enable HTML  syntax with CCR

from dragonfly import *

release = Key("shift:up, ctrl:up")
noSpaceNoCaps = Mimic("\\no-caps-on") + Mimic("\\no-space-on") #this gets added on the right side

cmd.map = {
           # Spoken-form    ->    ->    ->     Action object
			
                      
     	   "quotes":						Key("dquote,dquote,left")+noSpaceNoCaps,
           "thin quotes":						Key("apostrophe,apostrophe,left")+noSpaceNoCaps,
           
     	    "HTML":						Text("<html>" )+ Key("enter")+ Text("</html>")+ Key("up"),
     	    "head":						Text("<head>" )+ Key("enter")+ Text("</head>")+ Key("up"),
     	    "title":					Text("<title></title>")+  Key("left/10:8"),
     	    "body":						Text("<body>" )+ Key("enter")+ Text("</body>")+ Key("up"),
     	    "div":						Text("<div></div>")+  Key("left/10:6"),
			"subscript":				Text("<sub></sub>")+  Key("left/10:6"),     	   
     	   	"superscript":				Text("<sup></sup>")+  Key("left/10:6"),
     	   	"be are":					Text("<br>"),
     	   	
     	   	"table":					Text("<table>")+ Key("enter")+Text("<tr>")+ Key("enter")+Text("<td></td>")+Key("enter")+Text("</tr>")+Key("enter")+Text("</table>"),
     	   	"tee are":					Text("<tr></tr>"),
     	   	"tee D":					Text("<td></td>"),
     	   	
     	   	"bold":						Text("<b></b>")+  Key("left/10:4"),
     	   	"italics":					Text("<i></i>")+  Key("left/10:4"),
     	   	"underline":				Text("<u></u>")+  Key("left/10:4"),
     	   	
     	   	"make link":				Text("<a href=''></a>")+  Key("left/10:6"),
     	   	
     	   	"add class":				Text(" class=''" )+  Key("left/10:3"),
     	   	"add ID":					Text(" id=''" )+  Key("left/10:3"),
     	   	
     	   	"add comment":					Text( "#" ),
	        "equals":                       Key("equals"),
	        "pair":                     Text("()")+ Key("left"),
	        "[square] (bracket | brackets)":    Text("[]")+ Key("left"),
	        "curly":                    Text("{}")+ Key("left"),
            "<n> bark":                           Text("%(n)d"),
            "<n> <n2> bark":                           Text("%(n)d%(n2)d"),
            "<n> <n2> <n3> bark":                           Text("%(n)d%(n2)d%(n3)d"),
            "string <text> string":                           Text("%(text)s"), 
	   
       
     	   
          }


cmd.extras   = [
            IntegerRef("n", 0, 100),
            IntegerRef("n2", 0, 100),
            IntegerRef("n3", 0, 100),
            Dictation("text"),
           ]
cmd.defaults = {
            "n": 1,
           }


